---
- include_tasks: is_systemd.yml

# Variable configuration.
- include_tasks: variables.yml




- name: Get installed graphviz version.
  command:  dot -V
  changed_when: false
  failed_when: false
  check_mode: false
  register: dot_installed_version

- name: Flag wrong graphviz version
  set_fact:
    new_graphviz_build: true
  when:
    - (dot_installed_version.rc != 0) or (dot_installed_version.stdout | regex_replace("^dot - graphviz version ([0-9\.]+) [\s\S]*$", "\\1") is not match(graphviz_version))

- name: Ensure Graphviz packages are removed.
  apt:
    name: "{{ item }}"
    state: absent
    autoclean: yes
    autoremove: yes
    purge: yes
  loop:
    - libxdot4
    - graphviz
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Temp remove groff restriction
  replace:
    path: /etc/dpkg/dpkg.cfg.d/docker
    regexp: 'path-exclude /usr/share/groff/\*'
    replace: '# path-exclude /usr/share/groff/*'
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Ensure Graphviz Python libraries are installed.
  apt:
    name: "{{ graphviz_python_library }}"
    state: present
  when:
    - new_graphviz_build is defined
    - new_graphviz_build


- name: Ensure Graphviz build packages are installed.
  apt:
    name: "{{ item }}"
    install_recommends: no
    state: present
  register: apt_installed_packages
  loop: "{{ graphviz_builddep_packages }}"
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Flag new apt build deps
  set_fact:
    new_graphviz_builddeps: apt_installed_packages
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

# - name: show the result
#   debug:
#     msg: "{{ item.invocation }}"
#   loop: "{{ apt_installed_packages.results}}"

- name: Ensure workspace exists
  file:
    path: "/root/workspace"
    state: directory
    mode: 0700
    recurse: true
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Get the source bundle
  unarchive:
    src: "{{ graphviz_url }}"
    remote_src: true
    dest: "/root/workspace"
    mode: 0755
  register: install_r
  until: install_r is succeeded
  retries: 3
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Configure
  command:
    chdir: "{{ graphviz_workspace }}"
    argv:
      - ./configure
      - --disable-silent-rules
      - --prefix=/usr
      - --datadir=\$${prefix}/share
      - --infodir=\$${prefix}/share/info
      - --mandir=\$${prefix}/share/man
      - --disable-static
      - --without-included-ltdl
      - --with-pangocairo
      - --with-x
      - --with-gdk-pixbuf
      - --without-glut
      - --with-gnomeui
      - --with-gtk
      - --without-poppler
      - --with-gts
      - --with-ipsepcola
      - --without-qt
      - --with-rsvg
      - --with-ann
      - --with-webp
      - --enable-guile
      - --enable-lua
      - --enable-php
      - --enable-ruby
      - --enable-tcl
      - --enable-java
      - --enable-r
      - --disable-go
      - --disable-ocaml
      - --disable-sharp
      - --disable-python2
      - --enable-python3
  environment:
    CFLAGS: -g -O2 -Wno-sign-conversion -Wno-unused-parameter
    CXXFLAGS: -g -O2 -Wno-sign-conversion -Wno-unused-parameter
    GROFF_FONT: /usr/share/groff/1.22.3/font

  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Build
  make:
    chdir: "{{ graphviz_workspace }}"
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Install
  make:
    chdir: "{{ graphviz_workspace }}"
    target: install
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Replace groff restriction
  replace:
    path: /etc/dpkg/dpkg.cfg.d/docker
    regexp: '# path-exclude /usr/share/groff/\*'
    replace: 'path-exclude /usr/share/groff/*'
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Ensure Graphviz packages are installed.
  apt:
    name: "{{ item }}"
    install_recommends: no
    state: present
  loop: "{{ graphviz_packages }}"
  when:
    - new_graphviz_build is defined
    - new_graphviz_build

- name: Flag new installation complete
  set_fact:
    new_graphviz_build: false

- name: Remove workspace
  file:
    path: "/root/workspace"
    state: absent
  when:
    - new_graphviz_build is defined
    - not new_graphviz_build

- name: Remove build deps packages which were installed.
  apt:
    name: "{{ item.item }}"
    install_recommends: no
    state: absent
    purge: yes
  loop: "{{ apt_installed_packages.results}}"
  loop_control:
    label: "{{ item.item }}"
  when:
    - new_graphviz_build is defined
    - not new_graphviz_build
    - item is defined
    - item.changed

- name: Remove build packages from the cache
  apt:
    autoclean: yes

- name: Remove dependencies that are no longer required
  apt:
    autoremove: yes

